package com.restful.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "Orders")
public class Orders implements java.io.Serializable {

	private int orderId;
	private Customers customers;
	private int employeeId;
	private String orderDate;
	private int shipperId;
	private Set<OrderDetails> orderDetailses = new HashSet<OrderDetails>(0);

	public Orders() {
	}

	public Orders(int orderId, Customers customers, int employeeId, String orderDate, int shipperId) {
		this.orderId = orderId;
		this.customers = customers;
		this.employeeId = employeeId;
		this.orderDate = orderDate;
		this.shipperId = shipperId;
	}

	public Orders(int orderId, Customers customers, int employeeId, String orderDate, int shipperId,
			Set<OrderDetails> orderDetailses) {
		this.orderId = orderId;
		this.customers = customers;
		this.employeeId = employeeId;
		this.orderDate = orderDate;
		this.shipperId = shipperId;
		this.orderDetailses = orderDetailses;
	}

	@Id

	@Column(name = "OrderID", unique = true, nullable = false)
	public int getOrderId() {
		return this.orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CustomerID", nullable = false)
	public Customers getCustomers() {
		return this.customers;
	}

	public void setCustomers(Customers customers) {
		this.customers = customers;
	}

	@Column(name = "EmployeeID", nullable = false)
	public int getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(int employeeId) {
		this.employeeId = employeeId;
	}

	@Column(name = "OrderDate", nullable = false, length = 10)
	public String getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(String orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "ShipperID", nullable = false)
	public int getShipperId() {
		return this.shipperId;
	}

	public void setShipperId(int shipperId) {
		this.shipperId = shipperId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderDetails> getOrderDetailses() {
		return this.orderDetailses;
	}

	public void setOrderDetailses(Set<OrderDetails> orderDetailses) {
		this.orderDetailses = orderDetailses;
	}

}
